apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: sonarqube
  name: sonarqube
  labels:
    app: sonarqube
spec:
  selector:
    matchLabels:
      app: sonarqube
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      initContainers:
      - name: volume-permission
        image: busybox
        command: ["sh", "-c", "chown -R 1000:0 /data && chown -R 1000:0 /logs && chown -R 1000:0 //extensions" ]
        volumeMounts:
        - name: sonarqube-data
          mountPath: /data
        - name: sonarqube-extensions
          mountPath: /extensions
        - name: sonarqube-logs
          mountPath: /logs
        securityContext:
          runAsUser: 0
      containers:
        - name: mysonar
          image: sonarqube:community
          env:
          - name: SONAR_JDBC_URL
            value: jdbc:postgresql://postgresql.server:30042/sonar
          - name: SONAR_JDBC_USERNAME
            value: sonar
          - name: SONAR_JDBC_PASSWORD
            value: sonar
          ports:
          - containerPort: 9000
            name: sonarport
          volumeMounts:
            - name: sonarqube-data
              mountPath: /opt/sonarqube/data
            - name: sonarqube-extensions
              mountPath: /opt/sonarqube/extensions
            - name: sonarqube-logs
              mountPath: /opt/sonarqube/logs 
      volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: sonarqube-data-claim
        - name: sonarqube-extensions
          persistentVolumeClaim:
            claimName: sonarqube-extensions-claim
        - name: sonarqube-logs
          persistentVolumeClaim:
            claimName: sonarqube-logs-claim